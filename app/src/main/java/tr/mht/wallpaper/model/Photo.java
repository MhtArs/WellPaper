
package tr.mht.wallpaper.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;

// Generated by http://www.jsonschema2pojo.org/
public class Photo implements Parcelable {

    @SerializedName("id")
    @Expose
    private String id;
    @SerializedName("owner")
    @Expose
    private String owner;
    @SerializedName("secret")
    @Expose
    private String secret;
    @SerializedName("server")
    @Expose
    private String server;
    @SerializedName("farm")
    @Expose
    private Integer farm;
    @SerializedName("title")
    @Expose
    private String title;
    @SerializedName("ispublic")
    @Expose
    private Integer ispublic;
    @SerializedName("isfriend")
    @Expose
    private Integer isfriend;
    @SerializedName("isfamily")
    @Expose
    private Integer isfamily;
    @SerializedName("description")
    @Expose
    private Description description;
    @SerializedName("ownername")
    @Expose
    private String ownername;
    @SerializedName("views")
    @Expose
    private String views;
    @SerializedName("tags")
    @Expose
    private String tags;
    @SerializedName("media")
    @Expose
    private String media;
    @SerializedName("media_status")
    @Expose
    private String mediaStatus;

    protected Photo(Parcel in) {
        id = in.readString();
        owner = in.readString();
        secret = in.readString();
        server = in.readString();
        farm = in.readInt();
        title = in.readString();
        ispublic = in.readInt();
        isfriend = in.readInt();
        isfamily = in.readInt();

        description = in.readParcelable(Description.class.getClassLoader());

        ownername = in.readString();
        views = in.readString();
        tags = in.readString();
        media = in.readString();
        mediaStatus = in.readString();
    }

    public static final Parcelable.Creator<Photo> CREATOR = new Creator<Photo>() {
        public Photo createFromParcel(Parcel source) {
            return new Photo(source);
        }
        public Photo[] newArray(int size) {
            return new Photo[size];
        }
    };

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel parcel, int flags) {
        parcel.writeString(id);
        parcel.writeString(owner);
        parcel.writeString(secret);
        parcel.writeString(server);
        parcel.writeInt(farm);
        parcel.writeString(title);
        parcel.writeInt(ispublic);
        parcel.writeInt(isfriend);
        parcel.writeInt(isfamily);

        parcel.writeParcelable(description, flags);

        parcel.writeString(ownername);
        parcel.writeString(views);
        parcel.writeString(tags);
        parcel.writeString(media);
        parcel.writeString(mediaStatus);
    }

    /**
     *
     * @return
     *     The id
     */
    public String getId() {
        return id;
    }

    /**
     *
     * @param id
     *     The id
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     *
     * @return
     *     The owner
     */
    public String getOwner() {
        return owner;
    }

    /**
     *
     * @param owner
     *     The owner
     */
    public void setOwner(String owner) {
        this.owner = owner;
    }

    /**
     *
     * @return
     *     The secret
     */
    public String getSecret() {
        return secret;
    }

    /**
     *
     * @param secret
     *     The secret
     */
    public void setSecret(String secret) {
        this.secret = secret;
    }

    /**
     *
     * @return
     *     The server
     */
    public String getServer() {
        return server;
    }

    /**
     *
     * @param server
     *     The server
     */
    public void setServer(String server) {
        this.server = server;
    }

    /**
     *
     * @return
     *     The farm
     */
    public Integer getFarm() {
        return farm;
    }

    /**
     *
     * @param farm
     *     The farm
     */
    public void setFarm(Integer farm) {
        this.farm = farm;
    }

    /**
     *
     * @return
     *     The title
     */
    public String getTitle() {
        return title;
    }

    /**
     *
     * @param title
     *     The title
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     *
     * @return
     *     The ispublic
     */
    public Integer getIspublic() {
        return ispublic;
    }

    /**
     *
     * @param ispublic
     *     The ispublic
     */
    public void setIspublic(Integer ispublic) {
        this.ispublic = ispublic;
    }

    /**
     *
     * @return
     *     The isfriend
     */
    public Integer getIsfriend() {
        return isfriend;
    }

    /**
     *
     * @param isfriend
     *     The isfriend
     */
    public void setIsfriend(Integer isfriend) {
        this.isfriend = isfriend;
    }

    /**
     *
     * @return
     *     The isfamily
     */
    public Integer getIsfamily() {
        return isfamily;
    }

    /**
     *
     * @param isfamily
     *     The isfamily
     */
    public void setIsfamily(Integer isfamily) {
        this.isfamily = isfamily;
    }

    /**
     *
     * @return
     *     The description
     */
    public Description getDescription() {
        return description;
    }

    /**
     *
     * @param description
     *     The description
     */
    public void setDescription(Description description) {
        this.description = description;
    }

    /**
     *
     * @return
     *     The ownername
     */
    public String getOwnername() {
        return ownername;
    }

    /**
     *
     * @param ownername
     *     The ownername
     */
    public void setOwnername(String ownername) {
        this.ownername = ownername;
    }

    /**
     *
     * @return
     *     The views
     */
    public String getViews() {
        return views;
    }

    /**
     *
     * @param views
     *     The views
     */
    public void setViews(String views) {
        this.views = views;
    }

    /**
     *
     * @return
     *     The tags
     */
    public String getTags() {
        return tags;
    }

    /**
     *
     * @param tags
     *     The tags
     */
    public void setTags(String tags) {
        this.tags = tags;
    }

    /**
     *
     * @return
     *     The media
     */
    public String getMedia() {
        return media;
    }

    /**
     *
     * @param media
     *     The media
     */
    public void setMedia(String media) {
        this.media = media;
    }

    /**
     *
     * @return
     *     The mediaStatus
     */
    public String getMediaStatus() {
        return mediaStatus;
    }

    /**
     *
     * @param mediaStatus
     *     The media_status
     */
    public void setMediaStatus(String mediaStatus) {
        this.mediaStatus = mediaStatus;
    }

    public String getPhotoSizeStr(int size) {
        if(size < 320) {
            return "n"; // small
        } else if(size < 640) {
            return "z"; // medium
        } else if(size < 800) {
            return "c"; // medium, 800px on longest side
        } else if(size < 1024) {
            return "b"; // large
        } else if(size < 1600) {
            return "h"; // 1600 on longest side.
        } else {
            return "k"; // 2048 on longest.
        }
    }

    public String getPhotoUrl(int size) {
        return "https://farm" + farm + ".staticflickr.com/" + server + "/" + id + "_" + secret + "_" + getPhotoSizeStr(size) + ".jpg";
    }

    public String getFlickrPhotoUrl() {
        return "https://www.flickr.com/photos/" + owner + "/" + id;
    }
}
